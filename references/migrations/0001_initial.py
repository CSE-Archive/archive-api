# Generated by Django 4.2.4 on 2023-08-25 22:26

import core.helpers
import core.models
import core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, unique=True, verbose_name='Full Name')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', core.models.ShortUuidField(db_index=True, default=core.helpers.uuid_generator, editable=False, max_length=11, unique=True, verbose_name='UUID')),
                ('is_published', models.BooleanField(default=False, verbose_name='Is Published')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modified Time')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Book'), (2, 'Solution'), (3, 'Slide'), (4, 'Handout')], verbose_name='Type')),
                ('notes', models.CharField(max_length=255, null=True, verbose_name='Notes')),
                ('cover_image', models.ImageField(null=True, upload_to='images/references/', validators=[core.validators.MaxImageSizeValidator(1)], verbose_name='Cover Image')),
                ('collector', models.CharField(max_length=255, null=True, verbose_name='Collector')),
                ('authors', models.ManyToManyField(blank=True, related_name='references', to='references.author', verbose_name='Authors')),
                ('courses', models.ManyToManyField(blank=True, related_name='references', to='courses.course', verbose_name='Courses')),
                ('related_references', models.ManyToManyField(blank=True, to='references.reference', verbose_name='Related References')),
            ],
            options={
                'verbose_name': 'Reference',
                'verbose_name_plural': 'References',
                'ordering': ('modified_time', 'created_time'),
            },
        ),
    ]
